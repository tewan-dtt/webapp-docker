pipeline{
	agent any
	environment{
		dockerImage = ''	
	}
	tools{
		maven 'Maven'
	}
	stages {
		stage ('Initialize'){
			steps {
        			sh '''
                    			echo "PATH = ${PATH}"
                    			echo "M2_HOME = ${M2_HOME}"
            			''' 
				slackSend channel: "#deloitte-devsecops-poc", "color": "#2eb886", message: "${env.JOB_NAME} #${env.BUILD_NUMBER} - Jenkins Pipeline Started - <http://10.59.0.209:8080/blue/organizations/jenkins/${env.JOB_NAME}/detail/${env.JOB_NAME}/${env.BUILD_NUMBER}/pipeline|Jenkins Page>"
      			}
		}
		
    	stage ('Building') {
      			steps {
      				sh 'mvn clean package'
       			}
    	}
		
		stage ('Container Image Baking and Upload'){
			environment {registryCredential = 'docker-hub'}
			steps{
				script{
					dockerImage = docker.build("wanhyterr/webapp")
					docker.withRegistry( '', registryCredential ) {
						dockerImage.push("$BUILD_NUMBER")
						dockerImage.push('latest')
					}
				}
			}
		}

		stage ('Deploy in Staging'){
			steps{
				sh 'docker ps -f name=webapp -q | xargs --no-run-if-empty docker container stop'
				sh 'docker container ls -a -fname=webapp -q | xargs -r docker container rm'
				script{
					dockerImage.run("-p 8888:8080 --rm --name webapp")
				}
				slackSend channel: "#deloitte-devsecops-poc", "color": "#2eb886", message: "${env.JOB_NAME} #${env.BUILD_NUMBER} - Deployed to Staging - <http://10.59.0.209:8888/webapp|Webapp JSP in Staging>"
			}
		}

		stage('Security Analysis'){
			parallel{
				stage ('Secret Check') {
      				steps {
	        			sh 'rm trufflehog-result.yaml || true'
					sh 'rm trufflehog-report.html || true'
	        			sh 'docker run trufflehog3 -f yaml https://github.com/tewan-dtt/webapp-docker.git > trufflehog-result.yaml || true'
					sh 'docker run -v `pwd`/trufflehog-result.yaml:/trufflehog3/truffle-result.yaml trufflehog3 -R /trufflehog3/truffle-result.yaml > trufflehog-report.html || true'
	        			sh 'cat trufflehog-result.yaml'
      				}
    			}
		
				stage('Fortify Remote Analysis (SAST)') {
		      			steps {
		        			fortifyRemoteArguments transOptions: '-Xmx2G'
						fortifyRemoteAnalysis remoteAnalysisProjectType: fortifyMaven(), uploadSSC: [appName: 'Webapp-Demo-Fortify', appVersion: '1']
		      			}
		    	}

				stage('Prisma Cloud Scan (Container Vuln Scan)') {
				        steps {
							// Scan the image
							prismaCloudScanImage ca: '',
							cert: '',
							dockerAddress: 'unix:///var/run/docker.sock',
							image: 'wanhyterr/webapp:latest',
							key: '',
							logLevel: 'info',
							podmanPath: '',
							project: '',
							resultsFile: 'prisma-cloud-scan-results.json',
							ignoreImageBuildTime:true
				        }
				}

				stage ('Fortify WebInspect (DAST)'){
					steps {
						sh 'pwsh /opt/webinspect_script/webinspect-webapps.ps1&'
					}
				}

			}
		}

		stage ('Archive Artifact'){
			steps{
				archiveArtifacts 'target/*.war'
				archiveArtifacts 'trufflehog-result.yaml'
				archiveArtifacts 'trufflehog-report.html'
				archiveArtifacts '*.fpr'
				archiveArtifacts 'prisma-cloud-scan-results.json'
				publishHTML (target: [
				      allowMissing: false,
				      alwaysLinkToLastBuild: false,
				      keepAll: true,
				      reportDir: '',
				      reportFiles: 'trufflehog-report.html',
				      reportName: "Trufflehog Report"
				    ])
			}
		}
		
		stage ('Approval from Security Champion'){
			steps{
				slackSend channel: "#deloitte-devsecops-poc","color": "#ECB22E", message: "${env.JOB_NAME} #${env.BUILD_NUMBER} - Ready to perform Security Review \nSecret Check (Trufflehog) Result: <http://10.59.0.209:8080/job/${env.JOB_NAME}/${env.BUILD_NUMBER}/Trufflehog_20Report/|Trufflehog Report> \nSAST & DAST Result: <http://10.59.0.143/ssc|Fortify Software Security Center (SSC)>\nContainer Security Result: <https://app.sg.prismacloud.io/compute?computeState=%2Fmonitor%2Fvulnerabilities%2Fimages%2Fci|Prisma Cloud Scan Result>\nPlease kindly review the security testing result then approve in <http://10.59.0.209:8080/blue/organizations/jenkins/${env.JOB_NAME}/detail/${env.JOB_NAME}/${env.BUILD_NUMBER}/pipeline|Jenkins Page>."
				input message: "Please proceed if the new release doesn't contain any severe vulnerabilities.", submitter: "Security-Champion"
			}
		}
		
		stage ('Approve to Release'){
			steps{
				slackSend channel: "#deloitte-devsecops-poc","color": "#ECB22E", message: "${env.JOB_NAME} #${env.BUILD_NUMBER} - Ready to proceed in Production \nA new release is ready to launch in Production! Please kindly approve in <http://10.59.0.209:8080/blue/organizations/jenkins/${env.JOB_NAME}/detail/${env.JOB_NAME}/${env.BUILD_NUMBER}/pipeline|Jenkins Page>."
				input message: "Are you sure to deploy the new release into production?", submitter: "Squad-Owner"
			}
		}
		
		stage ('Deploy in Production'){
			steps{
				sshagent(['tomcat']){
					sh '''
						ssh -t ec2-user@tomcat 'docker ps -f name=webapp -q | xargs --no-run-if-empty docker container stop'
						ssh -t ec2-user@tomcat 'docker container ls -a -fname=webapp -q | xargs -r docker container rm'
						ssh -t ec2-user@tomcat 'docker images wanhyterr/webapp -q | xargs -r docker image rm -f'
						ssh -t ec2-user@tomcat 'docker run -d -p 8888:8080 --rm --name webapp wanhyterr/webapp'
					'''
				}
			}
		}
	}
		post {
			/*
			 * These steps will run at the end of the pipeline based on the condition.
			 * Post conditions run in order regardless of their place in pipeline
			 * 1. always - always run
			 * 2. changed - run if something changed from last run
			 * 3. aborted, success, unstable or failure - depending on status
			 */
			aborted {
			    slackSend channel: "#deloitte-devsecops-poc","color": "#E01E5A", message: "${env.JOB_NAME} #${env.BUILD_NUMBER} - The Pipeline is Aborted - (<http://10.59.0.209:8080/blue/organizations/jenkins/${env.JOB_NAME}/detail/${env.JOB_NAME}/${env.BUILD_NUMBER}/pipeline|Jenkins Page>)."
			}
			failure {
			    slackSend channel: "#deloitte-devsecops-poc","color": "#E01E5A", message: "${env.JOB_NAME} #${env.BUILD_NUMBER} - The Pipeline is Failed - (<http://10.59.0.209:8080/blue/organizations/jenkins/${env.JOB_NAME}/detail/${env.JOB_NAME}/${env.BUILD_NUMBER}/pipeline|Jenkins Page>)."
			}
			success {
			    slackSend channel: "#deloitte-devsecops-poc","color": "#2eb886", message: "${env.JOB_NAME} #${env.BUILD_NUMBER} - Deployed in Production Successfully - (<http://10.59.0.190:8888/webapp|Webapp JSP in Production>)."
			}
    		}
}
